BUILDING YOUR OWN EC2 ON RAILS AMI

The EC2 on Rails server image is built using Eric Hammond's EC2 Ubuntu build script (http://alestic.com/)

Note that building your own AMI is not necessary, other options are:
1. Use one of the public AMI's and configure it at run-time (recommended).
2. Re-bundle one of the public AMI's and save it as your own (not recommended because you won't be able to take advantage of any bug fixes or updates).


INSTRUCTIONS

1. Start an EC2 instance that will be used to run the build script. The recommended AMI's are Amazon's public developer images:
    32-bit: ami-f51aff9c
    64-bit: ami-f21aff9b
    
2. Copy your certificate file and private key file to the EC2 instance ephemeral storage, using your ssh <IDENTITY> file:
    scp -i <IDENTITY> pk-XXXXXXXXXX.pem root@<HOSTNAME>:/mnt/
    scp -i <IDENTITY> cert-XXXXXXXXXX.pem root@<HOSTNAME>:/mnt/

3. Copy the entire ec2onrails source folder <EC2ONRAILS> to the EC2 instance ephemeral storage, using your ssh <IDENTITY> file:
    rsync -rlvzcC --delete --exclude='output*' --exclude='.git' --rsh='ssh -i <IDENTITY>' <EC2ONRAILS> root@<HOSTNAME>:/mnt/
    
    ***Note: make sure NOT to include a trailing slash on the ec2onrails directory name, rsync behaves differently when copying directories if there is no slash at the end of the folder name! After this step you should have a directory on the server named /mnt/ec2onrails (e.g. use /rails/ec2onrails not /rails/ec2onrails/ or /rails/ec2onrails/.)

4. Using ssh, log in to the EC2 instance <HOSTNAME> using your ssh <IDENTITY> file:
    ssh -i <IDENTITY> root@<HOSTNAME>

5. On the server, run the build script with the appropriate arguments:
    ruby /mnt/ec2onrails/server/build \
     --bucket ec2onrails \
     --prefix ec2onrails-custom \
     --user XXXX-XXXX-XXXX \
     --access-key XXXXXXXXXX \
     --secret-key XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX \
     --private-key /mnt/pk-XXXXXXXXXX.pem \
     --cert /mnt/cert-XXXXXXXXXX.pem
   
